#version 410 core

uniform mat4 view;
uniform mat4 projection;

layout (location = 0) in vec3 position;
layout (location = 1) in vec3 normal;
layout (location = 2) in vec2 texCoords;
layout (location = 3) in mat4 model;

out vec3 positionOut;
out vec3 normalOut;
out vec2 texCoordsOut;

void main()
{
    positionOut = vec3(model * vec4(position, 1.0));
    normalOut = transpose(inverse(mat3(model))) * normal;
    texCoordsOut = texCoords;
    gl_Position = projection * view * vec4(positionOut, 1.0);
}
